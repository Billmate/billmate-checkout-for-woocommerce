<?php // phpcs:ignore/** * Helper product class *//** * This is the class just for testing purpose * * @package Krokedil/tests */class Krokedil_Grouped_Product extends AKrokedil_WC_Product {	/**	 * Products	 *	 * @var WC_Product_Simple[] $simple_products	 */	protected $simple_products;	/**	 * Krokedil_Grouped_Product constructor.	 *	 * @param array               $data props.	 * @param WC_Product_Simple[] $simple_products products.	 */	public function __construct( array $data = array(), $simple_products = array() ) {		parent::__construct( $data );		if ( empty( $simple_products ) ) {			$this->simple_products [] = ( new Krokedil_Simple_Product(				array(					'name'          => 'Simple product',					'regular_price' => 200,					'sale_price'    => 150,				)			) )->create();		} else {			$this->simple_products = $simple_products;		}	}	/**	 * Indicate whether to save or not.	 *	 * @return bool	 */	public function save(): bool {		return true;	}	/**	 * Creates a grouped product	 *	 * @return WC_Product_Grouped product.	 */	public function create(): WC_Product {		$wc_product = new WC_Product_Grouped();		$wc_product->set_props( $this->get_data() );		foreach ( $this->simple_products as $simple_product ) {			$simple_product->save();		}		$wc_product->set_children(			array_map(				static function ( $simple_product ) {					/**					 * Product					 *					 * @var  WC_Product_Simple $simple_product					 */					return $simple_product->get_id();				},				$this->simple_products			)		);		if ( $this->save() ) {			$wc_product->save();			return wc_get_product( $wc_product );		}		return $wc_product;	}}